name: CI - Docker build + Terraform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: Build Docker image and push to ECR
    runs-on: ubuntu-latest
    outputs:
      ecr_repo: ${{ steps.ecr.outputs.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR repository (if not exists)
        id: ecr
        run: |
          REPO_NAME=${{ secrets.ECR_REPOSITORY_NAME }}
          aws ecr describe-repositories --repository-names "$REPO_NAME" || aws ecr create-repository --repository-name "$REPO_NAME"
          echo "repository=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }}"
          docker build -t "$IMAGE_URI" -f Dockerfile .
          docker tag "$IMAGE_URI" "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest"

      - name: Push to ECR
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }}"
          docker push "$IMAGE_URI"
          docker push "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest"

  terraform:
    name: Terraform checks and plan (and apply on main)
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform -chdir=infra/terraform init

      - name: Terraform Format
        run: terraform -chdir=infra/terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=infra/terraform validate

      - name: Terraform Plan
        run: terraform -chdir=infra/terraform plan -out=tfplan

      - name: Terraform Apply (only on main)
        if: github.ref == 'refs/heads/main'
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform -chdir=infra/terraform apply -auto-approve tfplan
